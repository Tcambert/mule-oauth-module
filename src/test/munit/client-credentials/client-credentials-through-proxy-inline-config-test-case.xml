<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:oauth="http://www.mulesoft.org/schema/mule/oauth"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
      xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
      xsi:schemaLocation="
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
       http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
       http://www.mulesoft.org/schema/mule/munit-tools http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
       http://www.mulesoft.org/schema/mule/oauth http://www.mulesoft.org/schema/mule/oauth/current/mule-oauth.xsd
       http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">

    <munit:config name="client-credential-through-inline-config" minMuleVersion="4.2.2"/>

    <munit:dynamic-port propertyName="oauth.server.port"/>
    <munit:dynamic-port propertyName="proxyPort"/>
    <oauth:token-manager-config name="tokenManagerConfig"/>

    <munit:before-test name="setup">
        <munit-tools:mock-when processor="">

        </munit-tools:mock-when>
    </munit:before-test>

    <!--
    <munit:before-test name="clientCredentialsProxyBefore">
        <set-variable variableName="client.id" value="ndli93xdws2qoe6ms1d389vl6bxquv3e"/>
        <set-variable variableName="client.secret" value="yL692Az1cNhfk1VhTzyx4jOjjMKBrO9T"/>
        <set-variable variableName="scopes" value="expected scope"/>
        <set-variable variableName="token.url" value="#['http://localhost:' ++ ${oauth.server.port}]"/>
    </munit:before-test>
    -->
    <http:request-config name="requestConfigWithOAuth1">
        <http:request-connection host="localhost" port="${oauth.server.port}">
            <http:authentication>
                <oauth:client-credentials-grant-type
                        clientId="ndli93xdws2qoe6ms1d389vl6bxquv3e"
                        clientSecret="yL692Az1cNhfk1VhTzyx4jOjjMKBrO9T"
                        tokenManager="tokenManagerConfig"
                        scopes="$expected scope"
                        tokenUrl="#['http://localhost:' ++ ${oauth.server.port} ++ '/token']"
                        refreshTokenWhen="#[attributes.statusCode == 500]"
                        responseAccessToken="#[payload['access_token']]"
                        responseExpiresIn="#[payload['expires_in']]">
                    <oauth:proxy-config>
                        <http:proxy name="proxyConfig" host="localhost" port="${proxyPort}" />
                    </oauth:proxy-config>
                </oauth:client-credentials-grant-type>
            </http:authentication>
        </http:request-connection>
    </http:request-config>

    <munit:test name="client credentials through proxy inline" description="Validates client credential using proxy inline definition">
        <munit:execution>
            <http:request path="/resource" method="POST" config-ref="requestConfigWithOAuth1"/>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[payload]" is="#[MunitTools::equalTo('Text Message')]"/>
        </munit:validation>
    </munit:test>
</mule>